{"ast":null,"code":"var _jsxFileName = \"/var/www/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Configurar axios\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // Adicionar token aos headers\n  axios.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n\n  // Interceptor para tratar erros de autenticação\n  axios.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      localStorage.removeItem('token');\n      setUser(null);\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  });\n\n  // Verificar token ao carregar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        senha: password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(userData);\n      toast.success('Login realizado com sucesso!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Erro ao fazer login';\n      toast.error(message);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logout realizado com sucesso!');\n  };\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","checkAuth","get","data","login","email","password","post","senha","userData","setItem","success","_error$response2","_error$response2$data","message","logout","updateUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\ninterface User {\n  id: number;\n  nome: string;\n  email: string;\n  cargo: string;\n  setor: string;\n  admin: boolean;\n  ativo: boolean;\n  usuarioNiveis: Array<{\n    nivel: {\n      id: number;\n      nome: string;\n      prioridade: number;\n      podeCriarOrcamento: boolean;\n      podeAprovar: boolean;\n      nivelFinal: boolean;\n      ativo: boolean;\n    };\n  }>;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Configurar axios\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // Adicionar token aos headers\n  axios.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n\n  // Interceptor para tratar erros de autenticação\n  axios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (error.response?.status === 401) {\n        localStorage.removeItem('token');\n        setUser(null);\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  // Verificar token ao carregar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', { email, senha: password });\n      const { token, user: userData } = response.data;\n      \n      localStorage.setItem('token', token);\n      setUser(userData);\n      \n      toast.success('Login realizado com sucesso!');\n    } catch (error: any) {\n      const message = error.response?.data?.error || 'Erro ao fazer login';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logout realizado com sucesso!');\n  };\n\n  const updateUser = (userData: User) => {\n    setUser(userData);\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}