{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Configurar axios\naxios.defaults.baseURL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Adicionar token aos headers\naxios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Interceptor para tratar erros de autenticação\naxios.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');setUser(null);window.location.href='/login';}return Promise.reject(error);});// Verificar token ao carregar\nuseEffect(()=>{const checkAuth=async()=>{const token=localStorage.getItem('token');if(token){try{const response=await axios.get('/auth/me');setUser(response.data.user);}catch(error){localStorage.removeItem('token');}}setLoading(false);};checkAuth();},[]);const login=async(email,password)=>{try{const response=await axios.post('/auth/login',{email,senha:password});const{token,user:userData}=response.data;localStorage.setItem('token',token);setUser(userData);toast.success('Login realizado com sucesso!');}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Erro ao fazer login';toast.error(message);throw error;}};const logout=()=>{localStorage.removeItem('token');setUser(null);toast.success('Logout realizado com sucesso!');};const updateUser=userData=>{setUser(userData);};const value={user,isAuthenticated:!!user,loading,login,logout,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","concat","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","checkAuth","get","data","login","email","password","post","senha","userData","setItem","success","_error$response2","_error$response2$data","message","logout","updateUser","value","isAuthenticated","Provider"],"sources":["/var/www/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\ninterface User {\n  id: number;\n  nome: string;\n  email: string;\n  cargo: string;\n  setor: string;\n  admin: boolean;\n  ativo: boolean;\n  usuarioNiveis: Array<{\n    nivel: {\n      id: number;\n      nome: string;\n      prioridade: number;\n      podeCriarOrcamento: boolean;\n      podeAprovar: boolean;\n      nivelFinal: boolean;\n    };\n  }>;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Configurar axios\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n  // Adicionar token aos headers\n  axios.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n\n  // Interceptor para tratar erros de autenticação\n  axios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (error.response?.status === 401) {\n        localStorage.removeItem('token');\n        setUser(null);\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  // Verificar token ao carregar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', { email, senha: password });\n      const { token, user: userData } = response.data;\n      \n      localStorage.setItem('token', token);\n      setUser(userData);\n      \n      toast.success('Login realizado com sucesso!');\n    } catch (error: any) {\n      const message = error.response?.data?.error || 'Erro ao fazer login';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logout realizado com sucesso!');\n  };\n\n  const updateUser = (userData: User) => {\n    setUser(userData);\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}